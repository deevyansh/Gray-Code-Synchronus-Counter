{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 module exp777(input gclock, output go, output gl, output g2, output g3);\
\
  sr_flip_flop sr0(~(gl ^ g2 ^ g3), gl ^ g2 ^ g3, gclock, go);\
  sr_flip_flop srl((g0) & (~(g2 ^ g3)), g0 ^ (g2 ^ g3), gclock, gl);\
  sr_flip_flop sr2((~g0) & gl & (~g3), (g0) ^ (gl) ^ (g3), gclock, g2);\
  sr_flip_flop sr3((-g0) & (-g1) & g2, (~g0) & (~g1) & (-g2), gclock, g3);\
\
endmodule\
\
module sr_flip_flop(input s, input r, input srclk, output reg szQ);\
  always @(posedge srclk)\
  begin\
    if (s)\
      szQ <= 1'b1;\
    else if (r)\
      szQ <= 1'b0;\
  end\
endmodule\
}